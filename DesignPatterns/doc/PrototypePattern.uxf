<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>470</x>
      <y>170</y>
      <w>100</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Client
--

--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>850</x>
      <y>170</y>
      <w>100</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>/Prototype/
--

--
+ Clone()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>650</x>
      <y>330</y>
      <w>220</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>ConcretePrototypeA
--

--
+ Clone()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>930</x>
      <y>330</y>
      <w>220</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>ConcretePrototypeB
--

--
+ Clone()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>890</x>
      <y>250</y>
      <w>170</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;150.0;60.0;150.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>750</x>
      <y>250</y>
      <w>170</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;150.0;60.0;10.0;60.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>560</x>
      <y>180</y>
      <w>310</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
-prototype</panel_attributes>
    <additional_attributes>290.0;30.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>360</x>
      <y>90</y>
      <w>380</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>让一个原型克隆自身从而创建一个新的对象.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>870</x>
      <y>90</y>
      <w>300</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>原型类: 声明一个克隆自身的接口.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>690</x>
      <y>480</y>
      <w>330</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>具体原型类, 实现一个克隆自身的操作.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>890</x>
      <y>120</y>
      <w>130</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;50.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>870</x>
      <y>410</y>
      <w>190</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;70.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>740</x>
      <y>410</y>
      <w>160</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>140.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>490</x>
      <y>120</y>
      <w>40</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>20.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>360</x>
      <y>0</y>
      <w>800</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>原型模式(Prototype): 用原型实例,指定创建对象的种类, 并且通过拷贝这些原型创建新的对象. [DP]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>280</x>
      <y>540</y>
      <w>1000</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>使用原型模式创建对象比直接new一个对象在性能上要好的多,
因为Object类的clone方法是一个本地方法，它直接操作内存中的二进制流，特别是复制大对象时，性能的差别非常明显。

使用原型模式的另一个好处是简化对象的创建，使得创建对象就像我们在编辑文档时的复制粘贴一样简单。

因为以上优点，所以在需要重复地创建相似对象时可以考虑使用原型模式。
比如需要在一个循环体内创建对象，假如对象创建过程比较复杂或者循环次数很多的话，
使用原型模式不但可以简化创建过程，而且可以使系统的整体性能提高很多。</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>280</x>
      <y>740</y>
      <w>1000</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Prototype模式和Builder模式、AbstractFactory模式都是通过一个类（对象实例）来专门负责对象的创建工作（工厂对象）.
它们之间的区别是：
       Builder模式重在复杂对象的一步步创建（并不直接返回对象）;
       AbstractFactory模式重在产生多个相互依赖类的对象;
       Prototype模式重在从自身复制自己创建新类。</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
